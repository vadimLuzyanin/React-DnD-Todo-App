{"version":3,"sources":["Task.jsx","Column.jsx","AddTaskForm.jsx","MobileColumnsContainer.jsx","App.jsx","index.js"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","marginBottom","paperTransition","transform","transitionProperty","transitionDuration","button","marginLeft","buttonInner","breakpoints","down","width","buttonContainer","display","flexDirection","alignItems","next","fontSize","marginRight","color","palette","primary","main","Task","taskId","taskContent","index","columnId","handleTaskDelete","handleTaskEdit","mobile","handleTaskMobileMove","isDragDisabled","disableDrag","classes","useState","deleteDialogOpen","setDeleteDialogOpen","handleDeleteDialogOpen","handleDeleteDialogClose","handleCloseAndDelete","editDialogOpen","setEditDialogOpen","taskEditValue","setTaskEditValue","handleEditDialogOpen","handleEditDialogClose","handleCloseAndEdit","sentToNextColumn","setSentToNextColumn","draggableId","provided","snapshot","ListItem","component","Paper","className","elevation","isDragging","draggableProps","dragHandleProps","ref","innerRef","ListItemText","ListItemIcon","Button","variant","onClick","currentColumn","nextColumnId","setTimeout","handleSend","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","TextField","value","onChange","e","target","multiline","fullWidth","root","list","paddingTop","paddingLeft","paddingRight","marginTop","overflowY","overflowX","minHeight","maxHeight","listMobile","up","Column","tasks","title","mappedTasks","map","task","id","content","key","Box","Typography","align","droppableId","List","droppableProps","isDraggingOver","placeholder","form","height","justifyContent","mobileForm","input","mobileInput","submit","mobileSubmit","AddTaskForm","handleTaskAddition","newTaskInputState","setNewTaskInputState","onSubmit","preventDefault","size","label","type","TabPanel","props","children","other","hidden","tabPanel","tabPanelTransitionForwards","tabPanelTransitionBackwards","MobileColumnsContainer","columns","addEventFlag","setValue","transition","setTransition","useEffect","Tabs","event","newValue","Tab","tab","todo","doing","done","initalTasks","initialTodoColumn","initialDoingColumn","initialDoneColumn","App","tasksState","setTasksState","todoColumnState","setTodoColumnState","doingColumnState","setDoingColumnState","doneColumnState","setDoneColumnState","isMobileVersion","setIsMobileVersion","useTheme","mathches","useMediaQuery","mapThroughTasks","taskList","item","filter","setAddEventFlag","prev","setColumnState","newTaskContent","editedTask","setIsDragDisabled","CssBaseline","Container","maxWidth","style","overflow","newTaskId","length","newTasksState","newTodoColumnState","onDragEnd","result","source","destination","startColumn","finishColumn","setStartColumnState","setFinishColumnState","splice","column","oldColumnId","newColumnId","indexOf","bool","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c83021d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n\r\n    },\r\n    paperTransition: {\r\n        padding: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        transform: 'translateX(110%)',\r\n        transitionProperty: 'transform',\r\n        transitionDuration: '0.5s'\r\n    },\r\n    button: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    buttonInner: {\r\n        [theme.breakpoints.down('md')]: {\r\n            width: 0,\r\n            marginBottom: '5px',\r\n        },\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        [theme.breakpoints.down('md')]: {\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-end',\r\n        }\r\n    },\r\n    next: {\r\n        fontSize: '50px',\r\n        marginRight: '-25px',\r\n        color: theme.palette.primary.main,\r\n    },\r\n}))\r\n\r\nconst Task = ({ taskId, taskContent, index, columnId, handleTaskDelete, handleTaskEdit, mobile, handleTaskMobileMove, isDragDisabled, disableDrag }) => {\r\n    const classes = useStyles();\r\n\r\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n\r\n    const handleDeleteDialogOpen = () => {\r\n        setDeleteDialogOpen(true)\r\n    };\r\n\r\n    const handleDeleteDialogClose = () => {\r\n        setDeleteDialogOpen(false)\r\n    }\r\n\r\n    const handleCloseAndDelete = () => {\r\n        setDeleteDialogOpen(false);\r\n        handleTaskDelete(taskId, columnId)\r\n    }\r\n\r\n    const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n    const [taskEditValue, setTaskEditValue] = useState(taskContent)\r\n\r\n    const handleEditDialogOpen = () => {\r\n        setEditDialogOpen(true)\r\n    }\r\n\r\n    const handleEditDialogClose = () => {\r\n        setEditDialogOpen(false)\r\n        setTaskEditValue('')\r\n    }\r\n\r\n    const handleCloseAndEdit = () => {\r\n        if (!taskEditValue) {\r\n            return\r\n        }\r\n        handleTaskEdit(taskId, taskEditValue);\r\n        setTaskEditValue('')\r\n        setEditDialogOpen(false);\r\n    }\r\n\r\n    const [sentToNextColumn, setSentToNextColumn] = useState(false);\r\n\r\n    const handleSend = (currentColumn) => {\r\n        setSentToNextColumn(true);\r\n        disableDrag(true);\r\n        let nextColumnId;\r\n        setTimeout(() => {\r\n            switch (currentColumn) {\r\n                case 'todo': nextColumnId = 'doing';\r\n                    break;\r\n                case 'doing': nextColumnId = 'done';\r\n                    break;\r\n                default: break;\r\n            }\r\n            handleTaskMobileMove(taskId, columnId, nextColumnId);\r\n            disableDrag(false);\r\n        }, 500);\r\n    }\r\n\r\n    return (\r\n        <Draggable draggableId={taskId} index={index} isDragDisabled={isDragDisabled}>\r\n            {(provided, snapshot) => (\r\n                <ListItem\r\n                    component={Paper}\r\n                    className={sentToNextColumn ? classes.paperTransition : classes.paper}\r\n                    elevation={snapshot.isDragging ? 6 : 1}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                >\r\n                    <ListItemText>\r\n                        {taskContent}\r\n                    </ListItemText>\r\n                    <div className={classes.buttonContainer}>\r\n                        <ListItemIcon className={classes.button}>\r\n                            <Button variant='outlined' color='primary' className={classes.buttonInner} onClick={handleEditDialogOpen}>edit</Button>\r\n                        </ListItemIcon>\r\n                        <ListItemIcon className={classes.button}>\r\n                            <Button variant='outlined' color='secondary' className={classes.buttonInner} onClick={handleDeleteDialogOpen}>delete</Button>\r\n                        </ListItemIcon>\r\n                    </div>\r\n                    {mobile && columnId !== 'done' && <ListItemIcon className={classes.next} onClick={() => handleSend(columnId)}>\r\n                        <NavigateNextIcon fontSize='inherit' color='inherit' />\r\n                    </ListItemIcon>}\r\n\r\n                    <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose} >\r\n                        <DialogTitle>Are you sure you want to delete this task?</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Task content: <br /> {taskContent}\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleDeleteDialogClose} variant='outlined' color='primary' >\r\n                                No\r\n                            </Button>\r\n                            <Button onClick={handleCloseAndDelete} variant='outlined' color='secondary' autoFocus>\r\n                                Yes\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n\r\n                    <Dialog open={editDialogOpen} onClose={handleEditDialogClose}>\r\n                        <DialogTitle >Edit task</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Enter a new text for this task\r\n                            </DialogContentText>\r\n                            <TextField\r\n                                value={taskEditValue}\r\n                                onChange={(e) => setTaskEditValue(e.target.value)}\r\n                                multiline\r\n                                autoFocus\r\n                                fullWidth\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleEditDialogClose} variant='outlined' color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={handleCloseAndEdit} variant='outlined' color=\"secondary\">\r\n                                Edit\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </ListItem>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\n\r\nimport { Droppable } from 'react-beautiful-dnd'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nimport Box from '@material-ui/core/Box'\r\nimport List from '@material-ui/core/List'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Task from './Task'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: theme.spacing(1),\r\n    },\r\n    list: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n        transitionDuration: 200,\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n        minHeight: '15vh',\r\n        maxHeight: '75vh',\r\n    },\r\n    listMobile: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n        transitionDuration: 200,\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n        maxHeight: '63vh',\r\n        [theme.breakpoints.up(370)]: {\r\n            maxHeight: '68vh',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            maxHeight: '75vh',\r\n        },\r\n    }\r\n}))\r\n\r\nconst Column = ({ tasks, title, columnId, handleTaskDelete, handleTaskEdit, mobile, handleTaskMobileMove, isDragDisabled, disableDrag }) => {\r\n    const classes = useStyles()\r\n\r\n    const mappedTasks = tasks.map((task, index) =>\r\n        <Task\r\n            taskId={task.id}\r\n            taskContent={task.content}\r\n            index={index}\r\n            key={task.id}\r\n            handleTaskDelete={handleTaskDelete}\r\n            handleTaskEdit={handleTaskEdit}\r\n            columnId={columnId}\r\n            mobile={mobile}\r\n            handleTaskMobileMove={handleTaskMobileMove}\r\n            isDragDisabled={isDragDisabled}\r\n            disableDrag={disableDrag}>\r\n        </Task>\r\n    )\r\n    return (\r\n        <Box className={classes.root} width={mobile ? 1 : 1 / 3}>\r\n            <Typography align='center' variant={mobile ? 'h5' : 'h2'}>{title}</Typography>\r\n            <Droppable droppableId={columnId}>\r\n                {(provided, snapshot) => (\r\n                    <List\r\n                        component={Paper}\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        className={mobile ? classes.listMobile : classes.list}\r\n                        elevation={snapshot.isDraggingOver ? 6 : 1}\r\n                    >\r\n                        {mappedTasks}\r\n                        {provided.placeholder}\r\n                    </List>\r\n                )}\r\n            </Droppable>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Column\r\n","import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    form: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '75px',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center',\r\n    },\r\n    mobileForm: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '50px',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        width: '80%',\r\n    },\r\n    mobileInput: {\r\n        width: '70%'\r\n    },\r\n    submit: {\r\n        width: '10%',\r\n        minHeight: '75%'\r\n    },\r\n    mobileSubmit: {\r\n        width: '10%',\r\n        height: '42px',\r\n        fontSize: '10px',\r\n    },\r\n})\r\n\r\nconst AddTaskForm = ({ handleTaskAddition, mobile }) => {\r\n    const [newTaskInputState, setNewTaskInputState] = useState('')\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <form className={mobile ? classes.mobileForm : classes.form} onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handleTaskAddition(newTaskInputState)\r\n            setNewTaskInputState('')\r\n        }}>\r\n            <TextField size={mobile ? 'small' : 'medium'} className={mobile ? classes.mobileInput : classes.input} label='New Task' variant='outlined' value={newTaskInputState} onChange={(e) => setNewTaskInputState(e.target.value)} />\r\n            <Button size={mobile ? 'small' : 'large'} className={mobile ? classes.mobileSubmit : classes.submit} variant='contained' color='primary' type='submit'>Add Task</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTaskForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\n\r\nimport Column from './Column'\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            hidden={value !== index}\r\n            {...other}\r\n        >\r\n            {value === index && <Box>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    tabPanel: {\r\n        transitionProperty: 'transform',\r\n        transitionDuration: '0.5s'\r\n    },\r\n    tabPanelTransitionForwards: {\r\n        transform: 'translateX(110%)',\r\n        transitionProperty: 'transform',\r\n        transitionDuration: '0.5s'\r\n    },\r\n    tabPanelTransitionBackwards: {\r\n        transform: 'translateX(-110%)',\r\n        transitionProperty: 'transform',\r\n        transitionDuration: '0.5s'\r\n    },\r\n})\r\n\r\nconst MobileColumnsContainer = ({ columns, handleTaskDelete, handleTaskEdit, handleTaskMobileMove, isDragDisabled, disableDrag, addEventFlag }) => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const [transition, setTransition] = useState(null)\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleChange = (event, newValue) => {\r\n        if (newValue > value) {\r\n            setTransition('forwards')\r\n        } else if (newValue < value) {\r\n            setTransition('backwards')\r\n        }\r\n\r\n        setValue(newValue);\r\n\r\n        setTimeout(() => {\r\n            setTransition(null)\r\n        }, 0)\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (addEventFlag) {\r\n            setTransition('backwards')\r\n\r\n            setValue(0)\r\n\r\n            setTimeout(() => {\r\n                setTransition(null)\r\n            }, 0)\r\n        }\r\n    }, [addEventFlag])\r\n\r\n    return (\r\n        <Box>\r\n            <Tabs value={value} onChange={handleChange} variant='fullWidth' >\r\n                <Tab className={classes.tab} label=\"To Do\" />\r\n                <Tab className={classes.tab} label=\"Doing\" />\r\n                <Tab className={classes.tab} label=\"Done\" />\r\n            </Tabs>\r\n            <TabPanel value={value} index={0} className={transition === 'forwards' ? classes.tabPanelTransitionForwards : transition === 'backwards' ? classes.tabPanelTransitionBackwards : classes.tabPanel}>\r\n                <Column\r\n                    mobile\r\n                    tasks={columns.todo.tasks}\r\n                    handleTaskDelete={handleTaskDelete}\r\n                    title={columns.todo.title}\r\n                    columnId={columns.todo.columnId}\r\n                    handleTaskEdit={handleTaskEdit}\r\n                    handleTaskMobileMove={handleTaskMobileMove}\r\n                    isDragDisabled={isDragDisabled}\r\n                    disableDrag={disableDrag} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} className={transition === 'forwards' ? classes.tabPanelTransitionForwards : transition === 'backwards' ? classes.tabPanelTransitionBackwards : classes.tabPanel}>\r\n                <Column\r\n                    mobile\r\n                    tasks={columns.doing.tasks}\r\n                    handleTaskDelete={handleTaskDelete}\r\n                    title={columns.doing.title}\r\n                    columnId={columns.doing.columnId}\r\n                    handleTaskEdit={handleTaskEdit}\r\n                    handleTaskMobileMove={handleTaskMobileMove}\r\n                    isDragDisabled={isDragDisabled}\r\n                    disableDrag={disableDrag} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} className={transition === 'forwards' ? classes.tabPanelTransitionForwards : transition === 'backwards' ? classes.tabPanelTransitionBackwards : classes.tabPanel}>\r\n                <Column\r\n                    mobile\r\n                    tasks={columns.done.tasks}\r\n                    handleTaskDelete={handleTaskDelete}\r\n                    title={columns.done.title}\r\n                    columnId={columns.done.columnId}\r\n                    handleTaskEdit={handleTaskEdit}\r\n                    handleTaskMobileMove={handleTaskMobileMove}\r\n                    isDragDisabled={isDragDisabled}\r\n                    disableDrag={disableDrag} />\r\n            </TabPanel>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MobileColumnsContainer\r\n","import React, { useState, Fragment, useEffect } from 'react'\n\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { makeStyles, useTheme, useMediaQuery } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nimport Column from './Column';\nimport AddTaskForm from './AddTaskForm';\nimport MobileColumnsContainer from './MobileColumnsContainer';\n\nconst initalTasks = [];\n\nconst initialTodoColumn = [];\nconst initialDoingColumn = [];\nconst initialDoneColumn = [];\n\nconst useStyles = makeStyles({\n  columns: {\n    display: 'flex',\n    flexDirection: 'row',\n  }\n})\n\nconst App = () => {\n  const classes = useStyles()\n  const [tasksState, setTasksState] = useState(initalTasks)\n  const [todoColumnState, setTodoColumnState] = useState(initialTodoColumn)\n  const [doingColumnState, setDoingColumnState] = useState(initialDoingColumn)\n  const [doneColumnState, setDoneColumnState] = useState(initialDoneColumn)\n\n  const [isMobileVersion, setIsMobileVersion] = useState();\n\n\n\n  const theme = useTheme();\n  const mathches = useMediaQuery(theme.breakpoints.down('sm'));\n\n  useEffect(() => {\n    setIsMobileVersion(mathches);\n  }, [mathches])\n\n  const columns = {\n    todo: [todoColumnState, setTodoColumnState],\n    doing: [doingColumnState, setDoingColumnState],\n    done: [doneColumnState, setDoneColumnState],\n  }\n\n  const mapThroughTasks = (taskList) => {\n    return taskList.map((item) => tasksState.filter((task) => task.id === item)[0])\n  }\n\n  const [addEventFlag, setAddEventFlag] = useState(false)\n\n  const handleTaskAddition = (taskContent) => {\n    if (!taskContent) {\n      return;\n    }\n\n    setAddEventFlag(true)\n\n    const newTaskId = 'task-' + (tasksState.length + 1);\n    const newTasksState = [...tasksState, { id: newTaskId, content: taskContent }];\n    const newTodoColumnState = [...todoColumnState, newTaskId];\n\n    setTasksState(newTasksState);\n    setTodoColumnState(newTodoColumnState);\n\n    setTimeout(() => {\n      setAddEventFlag(false)\n    }, 100)\n  }\n\n  const handleTaskDelete = (taskId, columnId) => {\n    setTasksState((prev) => prev.filter((task) => task.id !== taskId))\n\n    const setColumnState = columns[columnId][1];\n\n    setColumnState((prev) => prev.filter((task) => task !== taskId))\n  }\n\n  const handleTaskEdit = (taskId, newTaskContent) => {\n    const editedTask = { id: taskId, content: newTaskContent };\n\n    setTasksState((prev) => [...prev.filter((task) => task.id !== taskId), editedTask])\n  }\n\n  const [isDragDisabled, setIsDragDisabled] = useState(false);\n\n  const disableDrag = (bool) => {\n    setIsDragDisabled(bool)\n  }\n\n  const handleTaskMobileMove = (taskId, oldColumnId, newColumnId) => {\n    const startColumn = [...columns[oldColumnId][0]];\n    const finishColumn = [...columns[newColumnId][0]];\n\n    const setStartColumnState = columns[oldColumnId][1];\n    const setFinishColumnState = columns[newColumnId][1];\n\n    startColumn.splice(startColumn.indexOf(taskId), 1);\n    finishColumn.splice(finishColumn.length, 0, taskId);\n\n    setStartColumnState(startColumn);\n    setFinishColumnState(finishColumn);\n  }\n\n  const onDragEnd = (result) => {\n    let { draggableId, source, destination } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n\n    if (source.droppableId !== destination.droppableId) {\n      const startColumn = [...columns[source.droppableId][0]];\n      const finishColumn = [...columns[destination.droppableId][0]];\n\n      const setStartColumnState = columns[source.droppableId][1];\n      const setFinishColumnState = columns[destination.droppableId][1];\n\n      startColumn.splice(source.index, 1);\n      finishColumn.splice(destination.index, 0, draggableId);\n\n      setStartColumnState(startColumn);\n      setFinishColumnState(finishColumn);\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const column = [...columns[source.droppableId][0]];\n      const setColumnState = columns[source.droppableId][1];\n\n      column.splice(source.index, 1);\n      column.splice(destination.index, 0, draggableId)\n\n      setColumnState(column);\n    }\n  }\n\n  return (\n    <Fragment>\n      <CssBaseline />\n      <Container maxWidth='xl' style={{ overflow: 'hidden' }}>\n        <Typography variant={isMobileVersion ? 'h3' : 'h1'} align='center'>Todo List</Typography>\n        <AddTaskForm mobile={isMobileVersion} handleTaskAddition={handleTaskAddition} />\n        <DragDropContext onDragEnd={onDragEnd} >\n          {!isMobileVersion && <Box className={classes.columns}>\n            <Column tasks={mapThroughTasks(todoColumnState)} handleTaskDelete={handleTaskDelete} title='To do' columnId='todo' handleTaskEdit={handleTaskEdit} />\n            <Column tasks={mapThroughTasks(doingColumnState)} handleTaskDelete={handleTaskDelete} title='Doing' columnId='doing' handleTaskEdit={handleTaskEdit} />\n            <Column tasks={mapThroughTasks(doneColumnState)} handleTaskDelete={handleTaskDelete} title='Done' columnId='done' handleTaskEdit={handleTaskEdit} />\n          </Box>}\n          {isMobileVersion && <MobileColumnsContainer\n            columns={{\n              todo: {\n                tasks: mapThroughTasks(todoColumnState),\n                title: 'To do',\n                columnId: 'todo'\n              },\n              doing: {\n                tasks: mapThroughTasks(doingColumnState),\n                title: 'Doing',\n                columnId: 'doing'\n              },\n              done: {\n                tasks: mapThroughTasks(doneColumnState),\n                title: 'Done',\n                columnId: 'done'\n              }\n            }}\n            handleTaskDelete={handleTaskDelete}\n            handleTaskEdit={handleTaskEdit}\n            handleTaskMobileMove={handleTaskMobileMove}\n            isDragDisabled={isDragDisabled}\n            disableDrag={disableDrag}\n            addEventFlag={addEventFlag} />}\n        </DragDropContext>\n      </Container>\n    </Fragment>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}